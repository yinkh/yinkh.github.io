{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"fastapi_uvicorn_logrotate/","text":"\u95ee\u9898\u73b0\u8c61 Fastapi\u4f7f\u7528Gunicorn+Uvicorn\u90e8\u7f72\u751f\u4ea7\u73af\u5883\uff0c\u4f7f\u7528Logrotate\u538b\u7f29access\u65e5\u5fd7\u540e\uff0c\u65b0\u7684Access\u65e5\u5fd7\u65e0\u6cd5\u6b63\u5e38\u8f93\u51fa\u3002 Uvicorn issue 1 \u542f\u52a8gunicorn+uvicorn (venv) [root@localhost task_registry_center]# gunicorn -w 2 -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker --access-logfile log/access.log main:app [2020-12-16 17:09:41 +0800] [3330] [INFO] Starting gunicorn 20.0.4 [2020-12-16 17:09:41 +0800] [3330] [INFO] Listening at: http://0.0.0.0:8000 (3330) [2020-12-16 17:09:41 +0800] [3330] [INFO] Using worker: uvicorn.workers.UvicornWorker [2020-12-16 17:09:41 +0800] [3332] [INFO] Booting worker with pid: 3332 [2020-12-16 17:09:41 +0800] [3333] [INFO] Booting worker with pid: 3333 2 \u6e05\u7a7aaccess.log\u6587\u4ef6 now access log file is empty [root@localhost log]# pwd /data/task_registry_center/log [root@localhost log]# ll total 20 -rw-r--r--. 1 root root 0 Dec 16 16:56 access.log -rw-r--r--. 1 root root 0 Dec 16 16:41 client.log -rw-r--r--. 1 root root 0 Dec 16 16:56 debug.log -rw-r--r--. 1 root root 0 Dec 16 16:41 elk_client.log -rw-r--r--. 1 root root 5402 Dec 16 17:08 error.log -rw-r--r--. 1 root root 0 Dec 16 16:41 id_server.log -rw-r--r--. 1 root root 4029 Dec 16 17:09 main.log -rw-r--r--. 1 root root 4480 Dec 16 17:10 tasks.log 3 \u8c03\u752810\u6b21Api\uff0c\u6b64\u65f6access.log\u5185\u5bb9\u5982\u4e0b\uff1a 192.168.11.1:60477 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60478 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60479 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60480 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60481 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60482 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60483 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60484 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60485 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60486 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 4 logrotate \u914d\u7f6e\u5982\u4e0b\uff1a [root@localhost ~]# cat /etc/logrotate.d/task_registry_center /data/task_registry_center/log/*.log { size 1M rotate 20 compress nodelaycompress dateformat -%Y-%m-%d-%s dateext missingok notifempty postrotate killall -s USR1 gunicorn 13,9 All endscript } 5 \u624b\u52a8\u8c03\u7528logrotate\u547d\u4ee4\u8fdb\u884c\u65e5\u5fd7\u538b\u7f29\u6216\u8005\u76f4\u63a5\u50cfgunicorn\u53d1\u9001USR1\u4fe1\u53f7: \u624b\u52a8\u8c03\u7528logrotate\u547d\u4ee4\uff1a `[root@localhost ~]# /usr/sbin/logrotate -f /etc/logrotate.d/task_registry_center` \u53d1\u9001USR1\u4fe1\u53f7\uff1a `killall -s USR1 gunicorn` 6 Gunicorn\u65e5\u5fd7\u63d0\u793a\u5df2\u7ecf\u6b63\u5e38\u5904\u7406\u4e86USR1\u4fe1\u53f7\uff08\u5728gunicorn\u4e2d\uff0cUSR1\u4fe1\u53f7\u8868\u793a\u65e5\u5fd7\u6587\u4ef6\u53d1\u751f\u53d8\u66f4\uff0c\u9700\u8981\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\uff09\uff1a [2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1 [2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1 [2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1 [2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1 7 \u518d\u6b21\u8c03\u752810\u6b21Api\uff0caccess.log\u5e76\u672a\u8bb0\u5f55\u5230\u6700\u65b0\u7684\u8c03\u7528\u8bb0\u5f55\u3002 \u65e5\u5fd7\u76ee\u5f55\uff0c\u53ef\u89c1\u65b0\u7684access.log\u65e5\u5fd7\u4e3a\u7a7a\uff1a [root@localhost log]# ll total 20 -rw-r--r--. 1 root root 0 Dec 16 17:12 access.log -rw-r--r--. 1 root root 125 Dec 16 17:11 access.log-2020-12-16-1608109936.gz access.log-2020-12-16-1608109936.gz \u6587\u4ef6\u5185\u5bb9\u4f9d\u65e7\u4e3a\u524d10\u6b21\u7684API\u8c03\u7528\u8bb0\u5f55: 192.168.11.1:60477 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60478 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60479 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60480 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60481 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60482 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60483 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60484 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60485 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60486 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 \u73af\u5883\u4fe1\u606f \u7cfb\u7edf Centos7 Python 3.8.3 gunicorn 20.0.4 uvicorn 0.13.1 fastapi 0.62.0 logrotate logrotate\u6709\u4e24\u4e2a\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5206\u522b\u4e3a copytruncate \u548c create \uff0c\u7b80\u5355\u8bf4\u4e0b\u4e24\u79cd\u6a21\u5f0f\u7684\u533a\u522b\u3002 \u5728\u4ecb\u7ecdcreate\u6a21\u5f0f\u4e4b\u524d\uff0c\u9700\u8981\u5148\u4ecb\u7ecd\u4e0blinux\u7cfb\u7edf\u4e2d\u6587\u4ef6\u662f\u901a\u8fc7inode\u7f16\u53f7\u6765\u5b9a\u4f4d\u7684\uff0c\u548c\u6587\u4ef6\u540d\u79f0\u6ca1\u6709\u5173\u7cfb\u3002 create \u5c06\u5f53\u524d\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u6587\u4ef6\u91cd\u547d\u540d\u4e3a\u538b\u7f29\u6587\u4ef6\uff0c\u4f46\u662finode\u7f16\u53f7\u4e0d\u53d8\u3002\u7a0b\u5e8f\u4ec5\u901a\u8fc7inode\u7f16\u53f7\u5b9a\u4f4d\u65e5\u5fd7\u6587\u4ef6\uff0c\u6240\u4ee5\u6b64\u65f6\u5230\u7a0b\u5e8f\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\uff0c\u6240\u6709\u751f\u6210\u7684\u65e5\u5fd7\u90fd\u8f93\u51fa\u5230\u4e86\u91cd\u547d\u540d\u540e\u7684\u6587\u4ef6\u4e2d\u3002 \u521b\u5efa\u65b0\u7684\u540c\u540d\u65e5\u5fd7\u6587\u4ef6\uff0c\u867d\u7136\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6\u548c\u539f\u6765\u65e5\u5fd7\u6587\u4ef6\u7684\u540d\u5b57\u4e00\u6837\uff0c\u4f46\u662finode\u7f16\u53f7\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u8fd8\u662f\u5f80\u539f\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u3002 \u901a\u8fc7\u67d0\u4e9b\u65b9\u5f0f\u901a\u77e5\u7a0b\u5e8f\uff0c\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\u3002\u7a0b\u5e8f\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\uff0c\u9760\u7684\u662f\u6587\u4ef6\u8def\u5f84\u800c\u4e0d\u662finode\u7f16\u53f7\uff0c\u6240\u4ee5\u6253\u5f00\u7684\u662f\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6\u3002 copytruncate \u62f7\u8d1d\u5f53\u524d\u65e5\u5fd7\u6587\u4ef6\u5230\u538b\u7f29\u6587\u4ef6\uff0c\u8fd9\u671f\u95f4\u7a0b\u5e8f\u7167\u5e38\u8f93\u51fa\u65e5\u5fd7\u5230\u539f\u6765\u7684\u6587\u4ef6\u4e2d\uff0c\u539f\u6765\u7684\u6587\u4ef6\u540d\u4e5f\u6ca1\u6709\u53d8\u3002 \u6e05\u7a7a\u7a0b\u5e8f\u6b63\u5728\u8f93\u51fa\u7684\u65e5\u5fd7\u6587\u4ef6\u3002\u6e05\u7a7a\u540e\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u8fd8\u662f\u8f93\u51fa\u5230\u8fd9\u4e2a\u65e5\u5fd7\u6587\u4ef6\u4e2d\uff0c\u56e0\u4e3a\u6e05\u7a7a\u6587\u4ef6\u53ea\u662f\u628a\u6587\u4ef6\u7684\u5185\u5bb9\u5220\u9664\u4e86\uff0c\u6587\u4ef6\u7684inode\u7f16\u53f7\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u53d8\u5316\u7684\u662f\u5143\u4fe1\u606f\u4e2d\u6587\u4ef6\u5185\u5bb9\u7684\u4fe1\u606f\u3002 \u6b64\u65b9\u6848\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u65e5\u5fd7\u62f7\u8d1d\u5f00\u59cb\uff0c\u5230\u6e05\u7a7a\u65e5\u5fd7\u6587\u4ef6\u7684\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u6ca1\u6709\u5b58\u50a8\uff0c\u5b58\u5728\u65e5\u5fd7\u4e22\u5931\u7684\u98ce\u9669\u3002 logrotate\u673a\u5236\u548c\u539f\u7406 \u95ee\u9898\u4fee\u590d Gunicorn\u6e90\u7801\u5206\u6790 \u5728gunicorn(\u7248\u672c20.0.4)\u4e2d\u53ef\u4ee5\u67e5\u627e\u5230\u548cUSR1\u4fe1\u53f7\u5904\u7406\u7684\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a venv/Lib/site-packages/gunicorn/arbiter.py 196\u884c\uff1a def run(self): \"Main master loop.\" self.start() util._setproctitle(\"master [%s]\" % self.proc_name) try: self.manage_workers() while True: self.maybe_promote_master() sig = self.SIG_QUEUE.pop(0) if self.SIG_QUEUE else None if sig is None: self.sleep() self.murder_workers() self.manage_workers() continue if sig not in self.SIG_NAMES: self.log.info(\"Ignoring unknown signal: %s\", sig) continue signame = self.SIG_NAMES.get(sig) handler = getattr(self, \"handle_%s\" % signame, None) if not handler: self.log.error(\"Unhandled signal: %s\", signame) continue self.log.info(\"Handling signal: %s\", signame) handler() self.wakeup() def handle_usr1(self): \"\"\" SIGUSR1 handling. Kill all workers by sending them a SIGUSR1 \"\"\" self.log.reopen_files() self.kill_workers(signal.SIGUSR1) Uvicorn\u6e90\u7801\u5206\u6790 Uvicorn\u53ea\u5904\u7406\u4e86\u7a0b\u5e8f\u7ec8\u6b62\u76f8\u5173\u7684\u4fe1\u53f7\uff1a HANDLED_SIGNALS = ( signal.SIGINT, # Unix signal 2. Sent by Ctrl+C. signal.SIGTERM, # Unix signal 15. Sent by `kill <pid>`. ) venv/Lib/site-packages/uvicorn/workers.py 64\u884c\uff1a def init_process(self): self.config.setup_event_loop() super(UvicornWorker, self).init_process() def init_signals(self): pass def run(self): self.config.app = self.wsgi server = Server(config=self.config) loop = asyncio.get_event_loop() loop.run_until_complete(server.serve(sockets=self.sockets)) \u53ef\u4ee5\u770b\u5230UvicornWorker\u7684init_signals\u51fd\u6570\u88ab\u91cd\u5199\u4e3a\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u4e86\uff0c\u5176\u7236\u7c7bgunicorn.workers.base.Worker\u7684init_signals\u65b9\u6cd5\u4e3a\uff1a def init_signals(self): # reset signaling for s in self.SIGNALS: signal.signal(s, signal.SIG_DFL) # init new signaling signal.signal(signal.SIGQUIT, self.handle_quit) signal.signal(signal.SIGTERM, self.handle_exit) signal.signal(signal.SIGINT, self.handle_quit) signal.signal(signal.SIGWINCH, self.handle_winch) signal.signal(signal.SIGUSR1, self.handle_usr1) signal.signal(signal.SIGABRT, self.handle_abort) # Don't let SIGTERM and SIGUSR1 disturb active requests # by interrupting system calls signal.siginterrupt(signal.SIGTERM, False) signal.siginterrupt(signal.SIGUSR1, False) if hasattr(signal, 'set_wakeup_fd'): signal.set_wakeup_fd(self.PIPE[1]) \u89e3\u51b3\u65b9\u6848 \u8ba9UvicornWorker\u6b63\u5e38\u5904\u7406USR1\u4fe1\u53f7\u5373\u53ef\uff0c\u5c06 venv/Lib/site-packages/uvicorn/workers.py 63\u884c\u7531\uff1a def init_signals(self): pass \u4fee\u6539\u4e3a import signal def init_signals(self): signal.signal(signal.SIGUSR1, self.handle_usr1) \u5373\u53ef\u3002","title":"FastApi+Uvicorn\u4f7f\u7528logrotate\u538b\u7f29access\u65e5\u5fd7\u540e\u65b0\u65e5\u5fd7\u65e0\u6cd5\u6b63\u5e38\u8f93\u51fa"},{"location":"fastapi_uvicorn_logrotate/#_1","text":"Fastapi\u4f7f\u7528Gunicorn+Uvicorn\u90e8\u7f72\u751f\u4ea7\u73af\u5883\uff0c\u4f7f\u7528Logrotate\u538b\u7f29access\u65e5\u5fd7\u540e\uff0c\u65b0\u7684Access\u65e5\u5fd7\u65e0\u6cd5\u6b63\u5e38\u8f93\u51fa\u3002 Uvicorn issue","title":"\u95ee\u9898\u73b0\u8c61"},{"location":"fastapi_uvicorn_logrotate/#1-gunicornuvicorn","text":"(venv) [root@localhost task_registry_center]# gunicorn -w 2 -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker --access-logfile log/access.log main:app [2020-12-16 17:09:41 +0800] [3330] [INFO] Starting gunicorn 20.0.4 [2020-12-16 17:09:41 +0800] [3330] [INFO] Listening at: http://0.0.0.0:8000 (3330) [2020-12-16 17:09:41 +0800] [3330] [INFO] Using worker: uvicorn.workers.UvicornWorker [2020-12-16 17:09:41 +0800] [3332] [INFO] Booting worker with pid: 3332 [2020-12-16 17:09:41 +0800] [3333] [INFO] Booting worker with pid: 3333","title":"1 \u542f\u52a8gunicorn+uvicorn"},{"location":"fastapi_uvicorn_logrotate/#2-accesslog","text":"now access log file is empty [root@localhost log]# pwd /data/task_registry_center/log [root@localhost log]# ll total 20 -rw-r--r--. 1 root root 0 Dec 16 16:56 access.log -rw-r--r--. 1 root root 0 Dec 16 16:41 client.log -rw-r--r--. 1 root root 0 Dec 16 16:56 debug.log -rw-r--r--. 1 root root 0 Dec 16 16:41 elk_client.log -rw-r--r--. 1 root root 5402 Dec 16 17:08 error.log -rw-r--r--. 1 root root 0 Dec 16 16:41 id_server.log -rw-r--r--. 1 root root 4029 Dec 16 17:09 main.log -rw-r--r--. 1 root root 4480 Dec 16 17:10 tasks.log","title":"2 \u6e05\u7a7aaccess.log\u6587\u4ef6"},{"location":"fastapi_uvicorn_logrotate/#3-10apiaccesslog","text":"192.168.11.1:60477 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60478 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60479 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60480 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60481 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60482 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60483 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60484 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60485 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60486 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200","title":"3 \u8c03\u752810\u6b21Api\uff0c\u6b64\u65f6access.log\u5185\u5bb9\u5982\u4e0b\uff1a"},{"location":"fastapi_uvicorn_logrotate/#4-logrotate","text":"[root@localhost ~]# cat /etc/logrotate.d/task_registry_center /data/task_registry_center/log/*.log { size 1M rotate 20 compress nodelaycompress dateformat -%Y-%m-%d-%s dateext missingok notifempty postrotate killall -s USR1 gunicorn 13,9 All endscript }","title":"4 logrotate \u914d\u7f6e\u5982\u4e0b\uff1a"},{"location":"fastapi_uvicorn_logrotate/#5-logrotategunicornusr1","text":"\u624b\u52a8\u8c03\u7528logrotate\u547d\u4ee4\uff1a `[root@localhost ~]# /usr/sbin/logrotate -f /etc/logrotate.d/task_registry_center` \u53d1\u9001USR1\u4fe1\u53f7\uff1a `killall -s USR1 gunicorn`","title":"5 \u624b\u52a8\u8c03\u7528logrotate\u547d\u4ee4\u8fdb\u884c\u65e5\u5fd7\u538b\u7f29\u6216\u8005\u76f4\u63a5\u50cfgunicorn\u53d1\u9001USR1\u4fe1\u53f7:"},{"location":"fastapi_uvicorn_logrotate/#6-gunicornusr1gunicornusr1","text":"[2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1 [2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1 [2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1 [2020-12-16 17:12:16 +0800] [3330] [INFO] Handling signal: usr1","title":"6 Gunicorn\u65e5\u5fd7\u63d0\u793a\u5df2\u7ecf\u6b63\u5e38\u5904\u7406\u4e86USR1\u4fe1\u53f7\uff08\u5728gunicorn\u4e2d\uff0cUSR1\u4fe1\u53f7\u8868\u793a\u65e5\u5fd7\u6587\u4ef6\u53d1\u751f\u53d8\u66f4\uff0c\u9700\u8981\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\uff09\uff1a"},{"location":"fastapi_uvicorn_logrotate/#7-10apiaccesslog","text":"\u65e5\u5fd7\u76ee\u5f55\uff0c\u53ef\u89c1\u65b0\u7684access.log\u65e5\u5fd7\u4e3a\u7a7a\uff1a [root@localhost log]# ll total 20 -rw-r--r--. 1 root root 0 Dec 16 17:12 access.log -rw-r--r--. 1 root root 125 Dec 16 17:11 access.log-2020-12-16-1608109936.gz access.log-2020-12-16-1608109936.gz \u6587\u4ef6\u5185\u5bb9\u4f9d\u65e7\u4e3a\u524d10\u6b21\u7684API\u8c03\u7528\u8bb0\u5f55: 192.168.11.1:60477 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60478 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60479 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60480 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60481 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60482 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60483 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60484 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60485 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200 192.168.11.1:60486 - \"GET /api/client?page_size=10&page=1 HTTP/1.1\" 200","title":"7 \u518d\u6b21\u8c03\u752810\u6b21Api\uff0caccess.log\u5e76\u672a\u8bb0\u5f55\u5230\u6700\u65b0\u7684\u8c03\u7528\u8bb0\u5f55\u3002"},{"location":"fastapi_uvicorn_logrotate/#_2","text":"\u7cfb\u7edf Centos7 Python 3.8.3 gunicorn 20.0.4 uvicorn 0.13.1 fastapi 0.62.0","title":"\u73af\u5883\u4fe1\u606f"},{"location":"fastapi_uvicorn_logrotate/#logrotate","text":"logrotate\u6709\u4e24\u4e2a\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5206\u522b\u4e3a copytruncate \u548c create \uff0c\u7b80\u5355\u8bf4\u4e0b\u4e24\u79cd\u6a21\u5f0f\u7684\u533a\u522b\u3002 \u5728\u4ecb\u7ecdcreate\u6a21\u5f0f\u4e4b\u524d\uff0c\u9700\u8981\u5148\u4ecb\u7ecd\u4e0blinux\u7cfb\u7edf\u4e2d\u6587\u4ef6\u662f\u901a\u8fc7inode\u7f16\u53f7\u6765\u5b9a\u4f4d\u7684\uff0c\u548c\u6587\u4ef6\u540d\u79f0\u6ca1\u6709\u5173\u7cfb\u3002","title":"logrotate"},{"location":"fastapi_uvicorn_logrotate/#create","text":"\u5c06\u5f53\u524d\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u6587\u4ef6\u91cd\u547d\u540d\u4e3a\u538b\u7f29\u6587\u4ef6\uff0c\u4f46\u662finode\u7f16\u53f7\u4e0d\u53d8\u3002\u7a0b\u5e8f\u4ec5\u901a\u8fc7inode\u7f16\u53f7\u5b9a\u4f4d\u65e5\u5fd7\u6587\u4ef6\uff0c\u6240\u4ee5\u6b64\u65f6\u5230\u7a0b\u5e8f\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\uff0c\u6240\u6709\u751f\u6210\u7684\u65e5\u5fd7\u90fd\u8f93\u51fa\u5230\u4e86\u91cd\u547d\u540d\u540e\u7684\u6587\u4ef6\u4e2d\u3002 \u521b\u5efa\u65b0\u7684\u540c\u540d\u65e5\u5fd7\u6587\u4ef6\uff0c\u867d\u7136\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6\u548c\u539f\u6765\u65e5\u5fd7\u6587\u4ef6\u7684\u540d\u5b57\u4e00\u6837\uff0c\u4f46\u662finode\u7f16\u53f7\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u8fd8\u662f\u5f80\u539f\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u3002 \u901a\u8fc7\u67d0\u4e9b\u65b9\u5f0f\u901a\u77e5\u7a0b\u5e8f\uff0c\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\u3002\u7a0b\u5e8f\u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\uff0c\u9760\u7684\u662f\u6587\u4ef6\u8def\u5f84\u800c\u4e0d\u662finode\u7f16\u53f7\uff0c\u6240\u4ee5\u6253\u5f00\u7684\u662f\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6\u3002","title":"create"},{"location":"fastapi_uvicorn_logrotate/#copytruncate","text":"\u62f7\u8d1d\u5f53\u524d\u65e5\u5fd7\u6587\u4ef6\u5230\u538b\u7f29\u6587\u4ef6\uff0c\u8fd9\u671f\u95f4\u7a0b\u5e8f\u7167\u5e38\u8f93\u51fa\u65e5\u5fd7\u5230\u539f\u6765\u7684\u6587\u4ef6\u4e2d\uff0c\u539f\u6765\u7684\u6587\u4ef6\u540d\u4e5f\u6ca1\u6709\u53d8\u3002 \u6e05\u7a7a\u7a0b\u5e8f\u6b63\u5728\u8f93\u51fa\u7684\u65e5\u5fd7\u6587\u4ef6\u3002\u6e05\u7a7a\u540e\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u8fd8\u662f\u8f93\u51fa\u5230\u8fd9\u4e2a\u65e5\u5fd7\u6587\u4ef6\u4e2d\uff0c\u56e0\u4e3a\u6e05\u7a7a\u6587\u4ef6\u53ea\u662f\u628a\u6587\u4ef6\u7684\u5185\u5bb9\u5220\u9664\u4e86\uff0c\u6587\u4ef6\u7684inode\u7f16\u53f7\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u53d8\u5316\u7684\u662f\u5143\u4fe1\u606f\u4e2d\u6587\u4ef6\u5185\u5bb9\u7684\u4fe1\u606f\u3002 \u6b64\u65b9\u6848\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u65e5\u5fd7\u62f7\u8d1d\u5f00\u59cb\uff0c\u5230\u6e05\u7a7a\u65e5\u5fd7\u6587\u4ef6\u7684\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u7a0b\u5e8f\u8f93\u51fa\u7684\u65e5\u5fd7\u6ca1\u6709\u5b58\u50a8\uff0c\u5b58\u5728\u65e5\u5fd7\u4e22\u5931\u7684\u98ce\u9669\u3002 logrotate\u673a\u5236\u548c\u539f\u7406","title":"copytruncate"},{"location":"fastapi_uvicorn_logrotate/#_3","text":"","title":"\u95ee\u9898\u4fee\u590d"},{"location":"fastapi_uvicorn_logrotate/#gunicorn","text":"\u5728gunicorn(\u7248\u672c20.0.4)\u4e2d\u53ef\u4ee5\u67e5\u627e\u5230\u548cUSR1\u4fe1\u53f7\u5904\u7406\u7684\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a venv/Lib/site-packages/gunicorn/arbiter.py 196\u884c\uff1a def run(self): \"Main master loop.\" self.start() util._setproctitle(\"master [%s]\" % self.proc_name) try: self.manage_workers() while True: self.maybe_promote_master() sig = self.SIG_QUEUE.pop(0) if self.SIG_QUEUE else None if sig is None: self.sleep() self.murder_workers() self.manage_workers() continue if sig not in self.SIG_NAMES: self.log.info(\"Ignoring unknown signal: %s\", sig) continue signame = self.SIG_NAMES.get(sig) handler = getattr(self, \"handle_%s\" % signame, None) if not handler: self.log.error(\"Unhandled signal: %s\", signame) continue self.log.info(\"Handling signal: %s\", signame) handler() self.wakeup() def handle_usr1(self): \"\"\" SIGUSR1 handling. Kill all workers by sending them a SIGUSR1 \"\"\" self.log.reopen_files() self.kill_workers(signal.SIGUSR1)","title":"Gunicorn\u6e90\u7801\u5206\u6790"},{"location":"fastapi_uvicorn_logrotate/#uvicorn","text":"Uvicorn\u53ea\u5904\u7406\u4e86\u7a0b\u5e8f\u7ec8\u6b62\u76f8\u5173\u7684\u4fe1\u53f7\uff1a HANDLED_SIGNALS = ( signal.SIGINT, # Unix signal 2. Sent by Ctrl+C. signal.SIGTERM, # Unix signal 15. Sent by `kill <pid>`. ) venv/Lib/site-packages/uvicorn/workers.py 64\u884c\uff1a def init_process(self): self.config.setup_event_loop() super(UvicornWorker, self).init_process() def init_signals(self): pass def run(self): self.config.app = self.wsgi server = Server(config=self.config) loop = asyncio.get_event_loop() loop.run_until_complete(server.serve(sockets=self.sockets)) \u53ef\u4ee5\u770b\u5230UvicornWorker\u7684init_signals\u51fd\u6570\u88ab\u91cd\u5199\u4e3a\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u4e86\uff0c\u5176\u7236\u7c7bgunicorn.workers.base.Worker\u7684init_signals\u65b9\u6cd5\u4e3a\uff1a def init_signals(self): # reset signaling for s in self.SIGNALS: signal.signal(s, signal.SIG_DFL) # init new signaling signal.signal(signal.SIGQUIT, self.handle_quit) signal.signal(signal.SIGTERM, self.handle_exit) signal.signal(signal.SIGINT, self.handle_quit) signal.signal(signal.SIGWINCH, self.handle_winch) signal.signal(signal.SIGUSR1, self.handle_usr1) signal.signal(signal.SIGABRT, self.handle_abort) # Don't let SIGTERM and SIGUSR1 disturb active requests # by interrupting system calls signal.siginterrupt(signal.SIGTERM, False) signal.siginterrupt(signal.SIGUSR1, False) if hasattr(signal, 'set_wakeup_fd'): signal.set_wakeup_fd(self.PIPE[1])","title":"Uvicorn\u6e90\u7801\u5206\u6790"},{"location":"fastapi_uvicorn_logrotate/#_4","text":"\u8ba9UvicornWorker\u6b63\u5e38\u5904\u7406USR1\u4fe1\u53f7\u5373\u53ef\uff0c\u5c06 venv/Lib/site-packages/uvicorn/workers.py 63\u884c\u7531\uff1a def init_signals(self): pass \u4fee\u6539\u4e3a import signal def init_signals(self): signal.signal(signal.SIGUSR1, self.handle_usr1) \u5373\u53ef\u3002","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"mkdocs/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"mkdocs/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}